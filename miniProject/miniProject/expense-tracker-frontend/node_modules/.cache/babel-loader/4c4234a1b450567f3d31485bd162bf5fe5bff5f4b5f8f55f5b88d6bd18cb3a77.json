{"ast":null,"code":"var _jsxFileName = \"D:\\\\placementTraining\\\\miniProject\\\\expense-tracker-frontend\\\\src\\\\components\\\\ExpenseList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getExpenses } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseList(_ref) {\n  _s();\n  let {\n    refresh,\n    expenses = [],\n    filteredExpenses = []\n  } = _ref;\n  const [currentExpenses, setCurrentExpenses] = useState(expenses);\n  const [sortBy, setSortBy] = useState('dateDesc'); // Default sort by newest date\n\n  // Update currentExpenses when the expenses prop changes or on refresh\n  useEffect(() => {\n    // Decide which list to use: filtered or all expenses\n    const dataToDisplay = filteredExpenses.length > 0 ? filteredExpenses : expenses;\n    setCurrentExpenses(dataToDisplay);\n    // Apply sort whenever the displayed data or sort criteria changes\n    sortExpenses(dataToDisplay, sortBy);\n  }, [expenses, filteredExpenses, sortBy]); // Removed refresh from here as it's handled by outer useEffect\n\n  // Refetch expenses based on refresh prop (from App.jsx) for the main list\n  useEffect(() => {\n    if (refresh > 0) {\n      getExpenses().then(res => {\n        // Only update if no active filter is set by user, or if filteredExpenses is empty\n        if (filteredExpenses.length === 0) {\n          setCurrentExpenses(res.data);\n          sortExpenses(res.data, sortBy); // Sort fresh data\n        }\n      });\n    }\n  }, [refresh]);\n  const sortExpenses = (data, criterion) => {\n    let sorted = [...data];\n    switch (criterion) {\n      case 'dateDesc':\n        sorted.sort((a, b) => new Date(b.date) - new Date(a.date));\n        break;\n      case 'dateAsc':\n        sorted.sort((a, b) => new Date(a.date) - new Date(b.date));\n        break;\n      case 'amountAsc':\n        sorted.sort((a, b) => Number(a.amount) - Number(b.amount));\n        break;\n      case 'amountDesc':\n        sorted.sort((a, b) => Number(b.amount) - Number(a.amount));\n        break;\n      default:\n        break;\n    }\n    setCurrentExpenses(sorted);\n  };\n  const handleSortChange = e => {\n    const newSortBy = e.target.value;\n    setSortBy(newSortBy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort\",\n        children: \"Sort By: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sort\",\n        value: sortBy,\n        onChange: handleSortChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dateDesc\",\n          children: \"Date (Newest First)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dateAsc\",\n          children: \"Date (Oldest First)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"amountDesc\",\n          children: \"Amount (High to Low)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"amountAsc\",\n          children: \"Amount (Low to High)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentExpenses.map(exp => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: exp.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exp.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exp.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exp.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, exp.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpenseList, \"51UifxjMJHzFmokCVnkn7au7QRo=\");\n_c = ExpenseList;\nexport default ExpenseList;\nvar _c;\n$RefreshReg$(_c, \"ExpenseList\");","map":{"version":3,"names":["React","useEffect","useState","getExpenses","jsxDEV","_jsxDEV","ExpenseList","_ref","_s","refresh","expenses","filteredExpenses","currentExpenses","setCurrentExpenses","sortBy","setSortBy","dataToDisplay","length","sortExpenses","then","res","data","criterion","sorted","sort","a","b","Date","date","Number","amount","handleSortChange","e","newSortBy","target","value","children","style","marginBottom","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","exp","category","description","_c","$RefreshReg$"],"sources":["D:/placementTraining/miniProject/expense-tracker-frontend/src/components/ExpenseList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getExpenses } from '../services/api';\r\n\r\nfunction ExpenseList({ refresh, expenses = [], filteredExpenses = [] }) {\r\n  const [currentExpenses, setCurrentExpenses] = useState(expenses);\r\n  const [sortBy, setSortBy] = useState('dateDesc'); // Default sort by newest date\r\n\r\n  // Update currentExpenses when the expenses prop changes or on refresh\r\n  useEffect(() => {\r\n    // Decide which list to use: filtered or all expenses\r\n    const dataToDisplay = filteredExpenses.length > 0 ? filteredExpenses : expenses;\r\n    setCurrentExpenses(dataToDisplay);\r\n    // Apply sort whenever the displayed data or sort criteria changes\r\n    sortExpenses(dataToDisplay, sortBy);\r\n  }, [expenses, filteredExpenses, sortBy]); // Removed refresh from here as it's handled by outer useEffect\r\n\r\n  // Refetch expenses based on refresh prop (from App.jsx) for the main list\r\n  useEffect(() => {\r\n    if (refresh > 0) {\r\n      getExpenses().then(res => {\r\n        // Only update if no active filter is set by user, or if filteredExpenses is empty\r\n        if (filteredExpenses.length === 0) {\r\n          setCurrentExpenses(res.data);\r\n          sortExpenses(res.data, sortBy); // Sort fresh data\r\n        }\r\n      });\r\n    }\r\n  }, [refresh]);\r\n\r\n  const sortExpenses = (data, criterion) => {\r\n    let sorted = [...data];\r\n    switch (criterion) {\r\n      case 'dateDesc':\r\n        sorted.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n        break;\r\n      case 'dateAsc':\r\n        sorted.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n        break;\r\n      case 'amountAsc':\r\n        sorted.sort((a, b) => Number(a.amount) - Number(b.amount));\r\n        break;\r\n      case 'amountDesc':\r\n        sorted.sort((a, b) => Number(b.amount) - Number(a.amount));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setCurrentExpenses(sorted);\r\n  };\r\n\r\n  const handleSortChange = e => {\r\n    const newSortBy = e.target.value;\r\n    setSortBy(newSortBy);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '1rem' }}>\r\n        <label htmlFor=\"sort\">Sort By: </label>\r\n        <select id=\"sort\" value={sortBy} onChange={handleSortChange}>\r\n          <option value=\"dateDesc\">Date (Newest First)</option>\r\n          <option value=\"dateAsc\">Date (Oldest First)</option>\r\n          <option value=\"amountDesc\">Amount (High to Low)</option>\r\n          <option value=\"amountAsc\">Amount (Low to High)</option>\r\n        </select>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Category</th>\r\n            <th>Description</th>\r\n            <th>Amount</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentExpenses.map(exp => (\r\n            <tr key={exp.id}>\r\n              <td>{exp.date}</td>\r\n              <td>{exp.category}</td>\r\n              <td>{exp.description}</td>\r\n              <td>{exp.amount}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}