{"ast":null,"code":"var _jsxFileName = \"D:\\\\placementTraining\\\\miniProject\\\\expense-tracker-frontend\\\\src\\\\components\\\\ExpenseList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getExpenses } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseList(_ref) {\n  _s();\n  let {\n    refresh,\n    expenses = []\n  } = _ref;\n  const [currentExpenses, setCurrentExpenses] = useState(expenses);\n  const [sortBy, setSortBy] = useState('dateDesc'); // Default sort by newest date\n\n  // Update currentExpenses when the expenses prop changes or on refresh\n  useEffect(() => {\n    setCurrentExpenses(expenses);\n    // Apply sort whenever expenses or refresh changes\n    sortExpenses(expenses, sortBy);\n  }, [expenses, refresh, sortBy]);\n\n  // Refetch expenses based on refresh prop (from App.jsx)\n  useEffect(() => {\n    if (refresh > 0) {\n      getExpenses().then(res => setCurrentExpenses(res.data));\n    }\n  }, [refresh]);\n  const sortExpenses = (data, criterion) => {\n    let sorted = [...data];\n    switch (criterion) {\n      case 'dateDesc':\n        sorted.sort((a, b) => new Date(b.date) - new Date(a.date));\n        break;\n      case 'dateAsc':\n        sorted.sort((a, b) => new Date(a.date) - new Date(b.date));\n        break;\n      case 'amountAsc':\n        sorted.sort((a, b) => Number(a.amount) - Number(b.amount));\n        break;\n      case 'amountDesc':\n        sorted.sort((a, b) => Number(b.amount) - Number(a.amount));\n        break;\n      default:\n        break;\n    }\n    setCurrentExpenses(sorted);\n  };\n  const handleSortChange = e => {\n    const newSortBy = e.target.value;\n    setSortBy(newSortBy);\n    // sortExpenses is now called in the useEffect above whenever sortBy changes\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort\",\n        children: \"Sort By: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sort\",\n        value: sortBy,\n        onChange: handleSortChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dateDesc\",\n          children: \"Date (Newest First)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dateAsc\",\n          children: \"Date (Oldest First)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"amountDesc\",\n          children: \"Amount (High to Low)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"amountAsc\",\n          children: \"Amount (Low to High)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentExpenses.map(exp => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: exp.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exp.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exp.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exp.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, exp.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpenseList, \"51UifxjMJHzFmokCVnkn7au7QRo=\");\n_c = ExpenseList;\nexport default ExpenseList;\nvar _c;\n$RefreshReg$(_c, \"ExpenseList\");","map":{"version":3,"names":["React","useEffect","useState","getExpenses","jsxDEV","_jsxDEV","ExpenseList","_ref","_s","refresh","expenses","currentExpenses","setCurrentExpenses","sortBy","setSortBy","sortExpenses","then","res","data","criterion","sorted","sort","a","b","Date","date","Number","amount","handleSortChange","e","newSortBy","target","value","children","style","marginBottom","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","exp","category","description","_c","$RefreshReg$"],"sources":["D:/placementTraining/miniProject/expense-tracker-frontend/src/components/ExpenseList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getExpenses } from '../services/api';\r\n\r\nfunction ExpenseList({ refresh, expenses = [] }) {\r\n  const [currentExpenses, setCurrentExpenses] = useState(expenses);\r\n  const [sortBy, setSortBy] = useState('dateDesc'); // Default sort by newest date\r\n\r\n  // Update currentExpenses when the expenses prop changes or on refresh\r\n  useEffect(() => {\r\n    setCurrentExpenses(expenses);\r\n    // Apply sort whenever expenses or refresh changes\r\n    sortExpenses(expenses, sortBy);\r\n  }, [expenses, refresh, sortBy]);\r\n\r\n  // Refetch expenses based on refresh prop (from App.jsx)\r\n  useEffect(() => {\r\n    if (refresh > 0) {\r\n      getExpenses().then(res => setCurrentExpenses(res.data));\r\n    }\r\n  }, [refresh]);\r\n\r\n  const sortExpenses = (data, criterion) => {\r\n    let sorted = [...data];\r\n    switch (criterion) {\r\n      case 'dateDesc':\r\n        sorted.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n        break;\r\n      case 'dateAsc':\r\n        sorted.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n        break;\r\n      case 'amountAsc':\r\n        sorted.sort((a, b) => Number(a.amount) - Number(b.amount));\r\n        break;\r\n      case 'amountDesc':\r\n        sorted.sort((a, b) => Number(b.amount) - Number(a.amount));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setCurrentExpenses(sorted);\r\n  };\r\n\r\n  const handleSortChange = e => {\r\n    const newSortBy = e.target.value;\r\n    setSortBy(newSortBy);\r\n    // sortExpenses is now called in the useEffect above whenever sortBy changes\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '1rem' }}>\r\n        <label htmlFor=\"sort\">Sort By: </label>\r\n        <select id=\"sort\" value={sortBy} onChange={handleSortChange}>\r\n          <option value=\"dateDesc\">Date (Newest First)</option>\r\n          <option value=\"dateAsc\">Date (Oldest First)</option>\r\n          <option value=\"amountDesc\">Amount (High to Low)</option>\r\n          <option value=\"amountAsc\">Amount (Low to High)</option>\r\n        </select>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Category</th>\r\n            <th>Description</th>\r\n            <th>Amount</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentExpenses.map(exp => (\r\n            <tr key={exp.id}>\r\n              <td>{exp.date}</td>\r\n              <td>{exp.category}</td>\r\n              <td>{exp.description}</td>\r\n              <td>{exp.amount}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}